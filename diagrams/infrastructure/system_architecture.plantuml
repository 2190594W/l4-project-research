@startuml
'define deployment entities
folder "encrypted resource store" {
  storage resource_store #Moccasin
  database resource_db #LightBlue
}

node "Authentication (e.g. SSO)" {
  component [Authentication Service] as a_s #PaleVioletRed
  database auth_db #PaleTurquoise
  login -up- a_s
  logout -up- a_s
  register -up- a_s
}

package "OpenABE Library" {
  component [ABE Client Library] as abecl #LightCoral
  generate_params -- abecl
  import_public_params -- abecl
  decrypt -- abecl
  encrypt -- abecl
  import_user_key -- abecl
}

'define components
component [Resource Server] as rs #Aquamarine
component [Master Key Server] as mks #LightSeaGreen
component [Client Resource Server] as crs #LightGreen

'define links to deployment entities
resource_db <-right-> rs: "encrypted resources"
resource_db <-down-> resource_store: "manages\nresource storage"
a_s <-> auth_db: "user records"
crs <-> a_s: "authenticates user(s)"

'define interfaces for mks, rs & abecl
attributes -- mks
enrolment -right- mks
master_public_key -- mks
upload -- rs
download -- rs
all_resource_names -- rs
latest_mpk -- rs
latest_attributes -- rs

'define use of interfaces for crs, mks & rs
mks -down-( generate_params
crs -down-( upload
crs -down-( download
crs -down-( all_resource_names
crs -down-( latest_mpk
crs -down-( latest_attributes
crs -down-( decrypt
crs -down-( encrypt
crs -down-( import_user_key
crs -down-( import_public_params
rs .down.( attributes: "offline/manual update"
rs .down.( master_public_key

'define interfaces for crs & ws
resource_list -- crs
upload_resource -- crs
download_resource -- crs
encrypt_resource -- crs
decrypt_resource -- crs
search_resources -- crs

@enduml
